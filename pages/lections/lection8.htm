<!DOCTYPE html>
<html>
    <head>
		<title>Лекции</title>
		<link href="../../css/style.css" rel="stylesheet" type="text/css">
		<script src="../../js/jquery-2.0.3.min.js"></script>
		<script src="../../js/main.js"></script>
    </head>

    <body>
		<div id="content">
			<!-- Начало содержимого страницы -->
<p align="center" style="MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px; WORD-SPACING: 0px"><font face="Verdana" color="#010103" size="6"><b>
 Лекция №8. Методы реализации STEP.</b></font></b></font></p>
<h3><p align="center"><font face="Verdana" color="#010103"><B>Реализация обмена данными согласно стандарту</B></font></p></h3>
<h3><p align="center"><font face="Verdana" color="#010103"><B>ISO 10303 STEP</B></font></p></h3><br>
			
<p align="justify"><font face="Verdana" color="#010103">Наряду с заданием информационных моделей изделия, основным предназначением стандарта STEP является обмен данными об изделии. Под обменом данными об изделии в стандарте подразумевается хранение, доступ, передача и архивирование данных об изделии, т.е. процессы взаимодействия между различными компьютерными системами. Данными об изделии является содержание некоторой информационной модели изделия (обычно, протокола применения), описанной на языке EXPRESS (т.е. конкретные экземпляры сущностей). Однако для организации полноценного информационного обмена одной модели недостаточно: кроме нее, необходимы стандартные механизмы, реализующие процессы обмена данными и позволяющие различным компьютерным системам взаимодействовать между собой. В качестве таких механизмов выступают методы реализации STEP, предназначенные для реализации обмена данными об изделии. Методы реализации пркдставлены на рис. 8.1.</font></p>
<br><p  align="center" class="стиль7"><IMG src="../../images/lections/lection8/r1.jpg"></p>
 <h4><p align="center" class="стиль7"><FONT color=#010103><i>Рис. 8.1. Методы реализации STEP.</h4></i></FONT></p><br>
<p align="justify"><font face="Verdana" color="#010103">Поскольку методы реализации представляют собой интерфейс между различными компьютерными системами, то они не привязаны к какой-нибудь из них, а являются независимыми от программно-аппаратной платформы. Методы реализации STEP жестко ориентированы на обмен данными, структура которых описана на языке EXPRESS, что делает методы реализации независимыми от предметной области. В STEP регламентировано два метода реализации: формат обменного файла и программный интерфейс SDAI для доступа к базам данных по изделиям рис. 8.2.</font></p>
<br><p  align="center" class="стиль7"><IMG src="../../images/lections/lection8/r2.jpg"></p>
 <h4><p align="center" class="стиль7"><FONT color=#010103><i>Рис. 8.2. Обменный файл.</h4></i></FONT></p><br>
<p align="justify"><font face="Verdana" color="#010103">На сегодняшний день наиболее распространенным способом обмена данными между компьютерными системами является обмен с помощью файлов. В стандарте STEP этот способ представлен в виде так называемого «обменного файла», формат которого определен в разделеISO10303-21.Обменный файл STEP представляет собой текстовый файл особой структуры, содержащий данные, являющиеся предметом обмена. Содержимое обменного файла определяется информационной моделью, согласно которой происходит обмен (эта модель должна быть описана на языке EXPRESS), и собственно данными, представленными в соответствии с используемой информационной моделью.</font></p>
<p align="justify"><font face="Verdana" color="#010103">На слайде представлена схема обмена данными с помощью обменного файла STEP. Пусть необходимо передать некоторые данные между компьютерными системамиCAD-1 иCAD-2. Единственное условие обмена, которое должны согласовать передающая и принимающая сторона, – это информационная модель на языке EXPRESS, согласно которой будет производиться обмен. После этого в системеCAD-1 создается обменный файл STEP (для этого в систему должны быть включены соответствующие программные средства), содержащий необходимые данные, представленные в соответствии с выбранной информационной моделью. Далее полученный файл произвольным способом (на дискетах, по сети и т.п.) передается в системуCAD-2, которая читает его (для этого в систему также должны быть включены соответствующие программные средства) и, зная его структуру, которая соответствует выбранной информационной модели, извлекает требуемую информацию.</font></p>
<p align="justify"><font face="Verdana" color="#010103">Обменный файл STEP содержит последовательность текстовых символов (это и позволяет ему быть независимым от программно-аппаратной платформы) и состоит из двух частей: заголовка и секции данных. При передаче обменный файл не сопровождается никакой дополнительной информацией, т.е. все необходимые для его интерпретации данные обменный файл содержит в себе (кроме описания информационной модели на EXPRESS). На слайде приведен укрупненный фрагмент обменного файла. Начало файла обозначается набором символов «ISO-10303-21;», а конец файла обозначается набором символов «END-ISO-10303-21;». Между этими элементами как раз и находятся заголовок («HEADER») и секция данных («DATA»)(рис. 8.3). </font></p>
<br><p  align="center" class="стиль7"><IMG src="../../images/lections/lection8/r3.jpg"></p>
 <h4><p align="center" class="стиль7"><FONT color=#010103><i>Рис. 8.3. Описание заголовка.</h4></i></FONT></p><br>
<p align="justify"><font face="Verdana" color="#010103">Заголовок обменного файла содержит данные, описывающие сам обменный файл и информацию, в нем находящуюся. Заголовок обязательно должен присутствовать в любом обменном файле STEP, причем в одном файле может присутствовать только один заголовок. В отличие от секции данных, заголовок обменного файла предназначен в том числе и для интерпретации людьми. Он помогает человеку понять, какие именно данные были переданы в обменном файле, какова их структура, кто и когда их создал, какую компьютерную систему он при этом применял, а также некоторую другую информацию. Все это выражается с помощью трех обязательных конструкций заголовка:</font></p>
<p><font face="Verdana" color="#010103">- Описание файла (FILE_DESCRIPTION);</font></p>
<p><font face="Verdana" color="#010103">- Имя файла (FILE_NAME);</font></p>
<p><font face="Verdana" color="#010103">- Схема файла (FILE_SCHEMA).</font></p>
<p align="justify"><font face="Verdana" color="#010103">Заголовок обменного файла начинается с ключевого слова «HEADER» и заканчивается ключевым словом «ENDSEC;». Между ними находятся конструкции заголовка. Конструкции могут следовать только в указанном порядке.</font></p>
<p align="justify"><font face="Verdana" color="#010103">Конструкции заголовка состоят из ключевого слова и следующих за ним значений полей конструкции, взятых в скобки. Конструкция заканчивается символом «;». Все значения полей конструкций – текстовые, поэтому все они приводятся в одинарных кавычках. Значения полей одной конструкции отделяются друг от друга запятыми(рис.8.4).</font></p>
<br><p  align="center" class="стиль7"><IMG src="../../images/lections/lection8/r4.jpg"></p>
 <h4><p align="center" class="стиль7"><FONT color=#010103><i>Рис. 8.4. Описание файла.</h4></i></FONT></p><br>
<p align="justify"><font face="Verdana" color="#010103">Конструкция «Описание файла» содержит информацию о находящихся в файле данных и возможностях компьютерной системы, требуемых для интерпретации файла. Указанная информация содержится в двух полях конструкции:</font></p>
<p><font face="Verdana" color="#010103">• Описание: содержит произвольное описание содержимого обменного файла;</font></p>
<p><font face="Verdana" color="#010103">• Уровень реализации: содержит требования к компьютерной системе, интерпретирующей данный файл. Требования выражаются в указании класса соответствия разделу стандартаISO10303-21 (в настоящее время возможными значениями этого поля могут быть «1» или «2», что означает поддержку компьютерной системой первого или второго класса соответствия стандарту). Уровень соответствия стандарту компьютерной системы обязательно указывается ее производителем.</font></p>
<p align="justify"><font face="Verdana" color="#010103">Конструкция «Описание файла» задается ключевым словом «FILE_DESCRIPTION», следом за которым в скобках приводятся значения полей конструкции. Значение поля «описание» само заключено в скобки, в которых через запятую могут находиться произвольное количество строк, описывающих обменный файл(рис. 8.5).</font></p>
<br><p  align="center" class="стиль7"><IMG src="../../images/lections/lection8/r5.jpg"></p>
 <h4><p align="center" class="стиль7"><FONT color=#010103><i>Рис. 8.5. Имя файла.</h4></i></FONT></p><br>
<p align="justify"><font face="Verdana" color="#010103">Конструкция «Имя файла» содержит информацию о самом файле. Эта информация содержится в семи полях конструкции:</font></p>
<p><font face="Verdana" color="#010103">• Имя: содержит произвольное описание обменного файла (не путать с именем файла в операционной системе);</font></p>
<p><font face="Verdana" color="#010103">• Отметка времени: содержит дату и время создания обменного файла;</font></p>
<p><font face="Verdana" color="#010103">• Автор: содержит информацию о сотруднике, создавшем (или ответственном за создание) файла;</font></p>
<p><font face="Verdana" color="#010103">• Организация: содержит информацию об организации, с которой связан автор файла;</font></p>
<p><font face="Verdana" color="#010103">• Версия транслятора: содержит информацию о компьютерной программе (трансляторе), создавшей файл, включая имя и версию программы;</font></p>
<p><font face="Verdana" color="#010103">• Исходная система: содержит информацию о компьютерной системе, предоставившей данные для обменного файла;</font></p>
<p><font face="Verdana" color="#010103">• Авторизация: содержит информацию о сотруднике, разрешившем (авторизовавшим) передачу обменного файла.</font></p>

<p align="justify"><font face="Verdana" color="#010103">Конструкция «Имя файла» задается ключевым словом «FILE_NAME», следом за которым в скобках приводятся значения полей конструкции. Значения полей «автор» и «организация» сами заключены в скобки, в которых через запятую могут находиться произвольное количество строк, описывающих данное поле. Значение поля «отметка времени» обычно состоит из даты в формате «год - месяц - день», английской буквы «T» и времени в формате «час : минута : секунда»(рис.8.6).</font></p>
<br><p  align="center" class="стиль7"><IMG src="../../images/lections/lection8/r6.jpg"></p>
<h4><p align="center" class="стиль7"><FONT color=#010103><i>Рис. 8.6. Схема файла.</h4></i></FONT></p><br>
<p align="justify"><font face="Verdana" color="#010103">Конструкция «Схема файла» содержит информацию об EXPRESS-схеме (информационной модели на EXPRESS), согласно которой представлено содержимое обменного файла (т.е. конкретные экземпляры сущностей в секции данных обменного файла). Эта информация содержится в единственном поле конструкции:</font></p>
<p><font face="Verdana" color="#010103">- Идентификатор схемы: содержит имя EXPRESS-схемы, согласно которой представлено содержимое обменного файла.</font></p>
<p align="justify"><font face="Verdana" color="#010103">Конструкция «Схема файла» задается ключевым словом «FILE_SCHEMA», следом за которым в скобках приводится значение поля конструкции. Значение поля «идентификатор схемы» само заключено в дополнительные скобки.</font></p>
<br><p  align="center" class="стиль7"><IMG src="../../images/lections/lection8/r7.jpg"></p>
<h4><p align="center" class="стиль7"><FONT color=#010103><i>Рис. 8.7. Секция данных.</h4></i></FONT></p><br>
<p align="justify"><font face="Verdana" color="#010103">Секция данных обменного файла содержит передаваемые данные. Эта секция должна обязательно присутствовать в каждом обменном файле. В то же время, в обменном файле может содержаться только одна секция данных. В секции данных содержатся данные, структура которых соответствует выбранной информационной модели на языке EXPRESS(EXPRESS-схеме), указанной в заголовке обменного файла. Иными словами, в секции данных находятся экземпляры сущностей, объявленных в соответствующей EXPRESS-схеме. Секция данных начинается с ключевого слова «DATA» и заканчивается ключевым словом «ENDSEC;». Секция данных в первую очередь предназначена для интерпретации компьютерной системой, а не человеком.</font></p>
<p align="justify"><font face="Verdana" color="#010103">Секция данных обменного файла состоит из логических записей, разделенных символами «;». Одна запись соответствует одному экземпляру некоторой сущности EXPRESS-схемы. Логическая запись включает(рис. 8.8):</font></p>
<p><font face="Verdana" color="#010103">- Уникальный в рамках обменного файла номер записи (идентификатор записи), который используется для ссылок на эту запись из других записей (наличие ссылки соответствует ссылке одного экземпляра сущности на другой экземпляр сущности);</font></p>
<p><font face="Verdana" color="#010103">- Имя сущности, чей экземпляр выражен данной записью;</font></p>
<p><font face="Verdana" color="#010103">- Перечень значений атрибутов сущности для данного экземпляра сущности, выраженный в виде списка значений, разделенных запятыми и заключенных в скобки.</font></p>
<p align="justify"><font face="Verdana" color="#010103">Логические записи секции данных следуют в произвольном порядке.</font></p>
<br><p  align="center" class="стиль7"><IMG src="../../images/lections/lection8/r8.jpg"></p>
<h4><p align="center" class="стиль7"><FONT color=#010103><i>Рис. 8.8. Пример обменного файла.</h4></i></FONT></p><br>
<p align="justify"><font face="Verdana" color="#010103">В данном случае некоторая предметная область описана EXPRESS-схемой «example_geometry». Как видно из описания, эта предметная область включает понятия «точка» (сущность «point»), «линия» (сущность «line») и «окружность» (сущность «circle»). Здесь же приведен рисунок, на котором показаны объекты предметной области: три точки, одна линия и одна окружность.</font></p>
<p align="justify"><font face="Verdana" color="#010103">Обменный файл, содержащий описание объектов предметной области (это описание представлено согласно описанию самой предметной области), состоит из заголовка и секции данных. Заголовок показан не полностью, т.к. в нем не приведены значения полей двух первых конструкций заголовка, а показано только значение поля конструкции «FILE_SCHEMA», содержащее имя схемы, описывающей предметную область. В секции данных обменного файла присутствуют пять экземпляров сущностей: это три экземпляра сущности «point», соответствующие трем объектам типа «точка», один экземпляр сущности «line», соответствующий объекту типа «линия» и один экземпляр сущности «circle», соответствующий объекту типа «окружность». Значения атрибутов экземпляров сущности «point» соответствуют координатам точек. Значения атрибутов экземпляра сущности «line» представляют собой ссылки на соответствующие экземпляры сущностей «point» (т.е. на те точки, которые являются началом и концом линии). Значения атрибутов экземпляра сущности «circle» представляют собой соответственно радиус окружности и ссылку на экземпляр сущности «point», выражающей центр окружности.</font></p>
<br><p  align="center" class="стиль7"><IMG src="../../images/lections/lection8/r9.jpg"></p>
<h4><p align="center" class="стиль7"><FONT color=#010103><i>Рис. 8.9. Интерфейс SDAI.</h4></i></FONT></p><br>
<p align="justify"><font face="Verdana" color="#010103">Более перспективным по сравнению с обменным файлом способом обмена данными между компьютерными системами является прикладной программный интерфейс, поскольку он, в отличие от файлового обмена, позволяет организовать доступ к данным в режиме он-лайн. В стандарте STEP также поддерживается этот способ обмена в виде программного интерфейса SDAI (StandardDataAccessInterface– стандартный интерфейс доступа к данным), заданного в разделеISO10303-22.Интерфейс SDAI представляет собой стандартизованный набор операций для доступа к данным, структура которых задана на языке EXPRESS.SDAI предназначен для организации доступа к базам данных (или иным хранилищам информации) по изделиям. Примерами операций интерфейса SDA I являются такие операции, как:</font></p>
<p><font face="Verdana" color="#010103">- Создание экземпляра сущности;</font></p>
<p><font face="Verdana" color="#010103">- Установка значения атрибута экземпляра сущности;</font></p>
<p><font face="Verdana" color="#010103">- Считывание значения атрибута сущности;</font></p>
<p><font face="Verdana" color="#010103">- Удаление экземпляра сущности и т.п.</font></p>

<p align="justify"><font face="Verdana" color="#010103">Операции интерфейса используются прикладными компьютерными системами (например, САПР) для доступа к базе данных, причем прикладная система, поддерживающая интерфейс SDAI, но изначально не ориентированная на данную базу данных по изделию (также поддерживающую SDAI), сможет без перекодировки работать с этой базой данных. Особенностью программного интерфейса SDAI является то, что он предназначен для организации стандартизованного доступа к базам данных, информационная модель которых описана на языке EXPRESS, что, строго говоря, не ограничивает область применения SDAI только базами данных по изделиям, т.к. на EXPRESS может быть описана практически любая предметная область. Стандарт STEP задает схемы соответствия между абстрактным интерфейсом SDAI и конструкциями конкретных языков программирования C++ (ISO10303-23) и C(ISO10303-24). Кроме того, разрабатывается схема соответствия для языка Java.</font></p>
<p align="justify"><font face="Verdana" color="#010103">В данном случае задача передачи данных из системыCAD-1 в системуCAD-2 решается с помощью базы данных по изделию. Перед началом обмена все участвующие стороны должны договориться лишь об используемой информационной модели: она должна поддерживаться базой данных, а также обеими прикладными системами. Кроме того, база данных и прикладные системы должны поддерживать программный интерфейс SDAI. В самом начале процесса информационного обмена системаCAD-1 загружает требуемые данные в базу данных путем вызова соответствующих операций интерфейса SDAI. После появления данных в базе данных по изделию, любая прикладная система, работающая с ней (в том числе и системаCAD-2) имеет доступ к этим данным. Завершающим шагом обмена является обращение системыCAD-2 к базе данных и получение требуемой информации путем вызова соответствующих операций интерфейсаSDAI.</font></p>
<p align="justify"><font face="Verdana" color="#010103">Второй метод реализации обмена данными (т.е. интерфейс SDAI) имеет существенные преимущества перед использованием обменного файла. Кроме всего прочего, это – возможность одновременного доступа к одной и той же информации нескольких прикладных систем, что облегчает ведение параллельного проектирования, а также большая простота в создании и поддержке полной информационной модели изделия(рис.8.10). </font></p>
<br><p  align="center" class="стиль7"><IMG src="../../images/lections/lection8/r10.jpg"></p>
<h4><p align="center" class="стиль7"><FONT color=#010103><i>Рис. 8.10. Интерфейс SDAI.</h4></i></FONT></p><br>
<p align="justify"><font face="Verdana" color="#010103">Как уже говорилось, сам интерфейс SDAI не привязан к какому-либо языку программирования. Для практической реализации операций SDAI разрабатываются наборы функций, заданные на конкретном языке программирования. Полученные наборы функций называются «связываниями». Напомним, что SDA Iпризвана обеспечить доступ к данным, структура которых задана на языке EXPRESS. В связи с этим существует два вида связываний: позднее связывание и раннее связывание. Разница между ними будет пояснена на следующем примере: пусть необходимо установить значение атрибута «A1» экземпляра «I1» сущности «E1».</font></p>
<p align="justify"><font face="Verdana" color="#010103">Позднее связывание операций SDAI к языку программирования является независимым от EXPRESS-схемы, с помощью которой задана структура данных. Это означает, что полученные функции языка программирования могут работать с любой EXPRESS-схемой. В нашем примере для решения поставленной задачи вид такой функции можно схематично представить следующим образом:</font></p>
<B>SetValue(I1, A1, value)</B>
<p align="justify"><font face="Verdana" color="#010103">В случае позднего связывания все необходимые для выполнения операции исходные данные задаются в качестве параметров функции и определяются уже в процессе выполнения компьютерной программы. Позднее связывание позволяет обеспечить максимальную универсальность компьютерных систем, но предъявляет более высокие требования к производительности программно-аппаратных средств и квалификации разработчика компьютерной системы.</font></p>
<p align="justify"><font face="Verdana" color="#010103">Раннее связывание операций SDAI к языку программирования жестко ориентировано на EXPRESS-схему, с помощью которой задана структура данных и уже не может работать с другими EXPRESS-схемами. В нашем примере для решения поставленной задачи вид функции языка программирования можно схематично представить следующим образом:</font></p>
<B>SetValueE1A1(I1, value)</B>
<p align="justify"><font face="Verdana" color="#010103">В случае раннего связывания часть необходимых для выполнения операции исходных данных задаются уже в имени функции (сущность и атрибут) и определяются в процессе проектирования компьютерной программы. Раннее связывание не в состоянии обеспечить универсальность компьютерной системы, но предъявляет более низкие требования к производительности программно-аппаратных средств и квалификации разработчика компьютерной системы(рис.8.11). </font></p>
<br><p  align="center" class="стиль7"><IMG src="../../images/lections/lection8/r11.jpg"></p>
<h4><p align="center" class="стиль7"><FONT color=#010103><i>Рис. 8.11. SDAI-репозиторий.</h4></i></FONT></p><br>
<p align="justify"><font face="Verdana" color="#010103">Средством хранения данных, доступ к которым осуществляется через интерфейс SDAI, является так называемый «SDAI-репозиторий». В качестве репозитория может выступать любое средство хранения данных: база данных, область памяти или, например, обменный файл STEP. Стандарт STEPне регламентирует способы реализации SDAI-репозиториев.</font></p>
<p align="justify"><font face="Verdana" color="#010103">В репозитории хранятся описания объектов предметных областей (экземпляры сущностей и значения их атрибутов), представленные в соответствии с описаниями самих предметных областей (т.е. в соответствии с EXPRESS-схемами). Полное описание объектов некоторой предметной области, содержащее все экземпляры сущностей предметной области, называется экземпляром схемы(иначе говоря, если некоторую EXPRESS-схему саму считать объектом, то экземпляр схемы будет экземпляром этого объекта). Полнота описания выражается в том, что в нем отсутствуют ссылки на экземпляры сущностей, не входящих в это описание. В одном репозитории могут существовать несколько различных экземпляров одной и той же схемы. В то же время один экземпляр схемы может размещаться в более чем одном репозитории. Кроме экземпляра схемы, в репозитории хранится и само описание предметной области (т.е. сама EXPRESS-схема), которое называется словарем данных.</font></p>
<p align="justify"><font face="Verdana" color="#010103">Каждый экземпляр схемы содержит одну или более SDAI-моделей, и все экземпляры сущностей, присутствующие в экземпляре схемы, сгруппированы по SDAI-моделям, присутствующим в экземпляре схемы (причем один экземпляр сущности может входит только в однуSDAI-модель). Деление экземпляра схемы на модели может быть сделано для удобства обработки данных (например, можно выделить в отдельную модель данные о конкретном изделии), либо в том случае, когда экземпляр схемы охватывает более одного репозитория (в этом случае в каждом репозитории должно существовать по крайней мере по однойSDAI-модели, относящейся к данному экземпляру схемы).SDAI-модель может не содержать полной модели предметной области, но область внешних ссылок из модели ограничена экземпляром схемы, в котором существует SDAI-модель(рис.8.12). </font></p>
<br><p  align="center" class="стиль7"><IMG src="../../images/lections/lection8/r12.jpg"></p>
<h4><p align="center" class="стиль7"><FONT color=#010103><i>Рис. 8.12. SDAI-репозиторий.</h4></i></FONT></p><br>
<p align="justify"><font face="Verdana" color="#010103">Все программные реализации стандарта STEP можно условно разделить начетыре уровня, каждый из которых характеризуется своей функциональностью. При этом все четыре уровня используют для реализацииSTEPодин из двух существующих методов реализации (обменный файл или интерфейсSDAI) или их комбинацию.</font></p>
<p align="justify"><font face="Verdana" color="#010103"><B>Первый уровень реализации STEP(«Обменный файл»)</B> предполагает обмен данными между компьютерными приложениями с помощью обычных файлов, в том числе и обменного файлаSTEP. Это – самый простой и пока самый распространенный уровень реализацииSTEP. Он требует от компьютерных систем лишь возможности читать и создавать обменные файлы и не требует от систем представления внутренней структуры данных наEXPRESSи обеспечения доступа к ней с помощью SDAI. Первому уровню реализацииSTEPсоответствуют многиеSTEP-трансляторы, поставляемые вместе с САПР иPDM-системами.</font></p>
<p align="justify"><font face="Verdana" color="#010103"><B>Второй уровень реализации STEP(«Рабочая форма»)</B> предполагает, что компьютерные приложения продолжают обмениваться данными с помощью обменных файлов, но, после того, как некоторая система получила обменный файл и прочитала его содержимое в память, данные из обменного файла становятся доступными через интерфейсSDAI. Естественно, что при этом внутренние структуры данных системы соответствуют информационной модели наEXPRESS. Проще говоря, второй уровень реализацииSTEPпредполагает доступ к содержимому обменного файла с помощью интерфейсаSDAI. Поскольку доступ осуществляется к файлу, то трудно решаемыми являются вопросы обеспечения многопользовательского доступа к данным, контроля целостности данных и т.п. Существует ряд компьютерных систем, реализующих второй уровень. Наиболее известной из них является программный пакетST-DeveloperкомпанииSTEPTools. Кроме того, многиеSTEP-трансляторы для обменных файлов построены по принципу «рабочей формы», т.е. формирование и чтение обменного файла происходит средствамиSDAI.</font></p>
<p align="justify"><font face="Verdana" color="#010103"><B>Третий уровень реализации STEP(«База данных»)</B> предполагает всю функциональность второго уровня (т.е. работа с обменным файлом и доступ к нему через программный интерфейс), а также дополнительную возможность хранения данных не в обменном файле, а в СУБД. Такой подход позволяет использовать при работе с данными об изделии все преимущества СУБД (многопользовательский доступ, контроль целостности, транзакции и т.п.). Помимо хранения данных в СУБД, уровень «база данных» может содержать функции проверки части ограничений, заданных в используемойEXPRESS-схеме (например, правил уникальности или правил области значений сущностей). Практически для всех более или менее известных СУБД существуют реализацииSTEPтретьего уровня разной степени законченности (Oracle,Versant,ObjectStoreи т.д.). В качестве СУБД используются как реляционные, так и объектно-ориентированные СУБД. Наиболее известной разработкой этого уровня является пакетEXPRESSDataManagerкомпанииEPMTechnology.</font></p>
<p align="justify"><font face="Verdana" color="#010103"><B>Четвертый уровень реализации STEP(«База знаний»)</B>  предполагает всю функциональность третьего уровня, а также полный контроль выполнения всех ограничений, заданных вEXPRESS-схеме. Кроме того, в базе знаний могут быть дополнительно введены какие-либо правила, которым должны отвечать данные, заданные с помощью, например, нейронных сетей. В настоящий момент сведения о доступных коммерческих реализацияхSTEPуровня «база знаний» отсутствуют.</font></p>
<p align="justify"><font face="Verdana" color="#010103"></font></p>

<br><p><font align="left" face="Verdana" color="#010103">Список литературы:</font></p>
<p align="left"><font face="Verdana" color="#010103">1. CAD|CAM|CAE|DESIGN|INFORMATION NETWORK [Электронный ресурс]. — Режим доступа: www.cadinfo.net/.</font></p>
<p align="left"><font face="Verdana" color="#010103">2. Информационно-аналитический электронный журнал "Планета САМ" [Электронный ресурс]. — Режим доступа: http: //planetacam.ru/college/learn/12-2/.</font></p>
<br>
 <a href="../tests/test8.htm"  style="FONT-SIZE: 20px" title="Тестирование по данной лекции"><B>ТЕСТИРОВАНИЕ</B></a>
     <p align=right><A align=center href="#top" onmouseout="document.but37.src = '../../images/lections/lection8/up.png'" onmouseover="document.but37.src = '../../images/lections/lection8/upb.png'" title="К началу лекции" >
  <font color=#010103 face=Verdana><IMG align=center border=no name=but37 src="../../images/lections/lection8/up.png">

			<!-- Конец содержимого страницы -->
		</div>
    </body>
</html>